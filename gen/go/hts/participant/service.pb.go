// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: hts/participant/service.proto

package participant

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	common "onepass.app/facility/hts/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetEventByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *GetEventByIdRequest) Reset() {
	*x = GetEventByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventByIdRequest) ProtoMessage() {}

func (x *GetEventByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventByIdRequest.ProtoReflect.Descriptor instead.
func (*GetEventByIdRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventByIdRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type StringInputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *StringInputRequest) Reset() {
	*x = StringInputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringInputRequest) ProtoMessage() {}

func (x *StringInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringInputRequest.ProtoReflect.Descriptor instead.
func (*StringInputRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{1}
}

func (x *StringInputRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type UserWithEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId int64 `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *UserWithEventRequest) Reset() {
	*x = UserWithEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithEventRequest) ProtoMessage() {}

func (x *UserWithEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithEventRequest.ProtoReflect.Descriptor instead.
func (*UserWithEventRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{2}
}

func (x *UserWithEventRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserWithEventRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type SubmitAnswerForPostEventQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers     []*SubmitAnswerForPostEventQuestionRequest_Answer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
	UserEventId int64                                             `protobuf:"varint,2,opt,name=user_event_id,json=userEventId,proto3" json:"user_event_id,omitempty"`
}

func (x *SubmitAnswerForPostEventQuestionRequest) Reset() {
	*x = SubmitAnswerForPostEventQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAnswerForPostEventQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerForPostEventQuestionRequest) ProtoMessage() {}

func (x *SubmitAnswerForPostEventQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerForPostEventQuestionRequest.ProtoReflect.Descriptor instead.
func (*SubmitAnswerForPostEventQuestionRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitAnswerForPostEventQuestionRequest) GetAnswers() []*SubmitAnswerForPostEventQuestionRequest_Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *SubmitAnswerForPostEventQuestionRequest) GetUserEventId() int64 {
	if x != nil {
		return x.UserEventId
	}
	return 0
}

type SubmitAnswerForPostEventQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers []*common.Answer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *SubmitAnswerForPostEventQuestionResponse) Reset() {
	*x = SubmitAnswerForPostEventQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAnswerForPostEventQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerForPostEventQuestionResponse) ProtoMessage() {}

func (x *SubmitAnswerForPostEventQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerForPostEventQuestionResponse.ProtoReflect.Descriptor instead.
func (*SubmitAnswerForPostEventQuestionResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitAnswerForPostEventQuestionResponse) GetAnswers() []*common.Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type GenerateQRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenerateQRResponse) Reset() {
	*x = GenerateQRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateQRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateQRResponse) ProtoMessage() {}

func (x *GenerateQRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateQRResponse.ProtoReflect.Descriptor instead.
func (*GenerateQRResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateQRResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type EventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event []*common.Event `protobuf:"bytes,1,rep,name=event,proto3" json:"event,omitempty"`
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{6}
}

func (x *EventsResponse) GetEvent() []*common.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type IsEventAvailableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64                  `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Date    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *IsEventAvailableRequest) Reset() {
	*x = IsEventAvailableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEventAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEventAvailableRequest) ProtoMessage() {}

func (x *IsEventAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEventAvailableRequest.ProtoReflect.Descriptor instead.
func (*IsEventAvailableRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{7}
}

func (x *IsEventAvailableRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *IsEventAvailableRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetUpcomingEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetUpcomingEventsRequest) Reset() {
	*x = GetUpcomingEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpcomingEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingEventsRequest) ProtoMessage() {}

func (x *GetUpcomingEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingEventsRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingEventsRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUpcomingEventsRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetUpcomingEventsRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type GenerateQRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEventId int64 `protobuf:"varint,1,opt,name=user_event_id,json=userEventId,proto3" json:"user_event_id,omitempty"`
	UserId      int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId     int64 `protobuf:"varint,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *GenerateQRRequest) Reset() {
	*x = GenerateQRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateQRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateQRRequest) ProtoMessage() {}

func (x *GenerateQRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateQRRequest.ProtoReflect.Descriptor instead.
func (*GenerateQRRequest) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateQRRequest) GetUserEventId() int64 {
	if x != nil {
		return x.UserEventId
	}
	return 0
}

func (x *GenerateQRRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GenerateQRRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type GetTagsByEventIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*common.Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetTagsByEventIdResponse) Reset() {
	*x = GetTagsByEventIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsByEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsByEventIdResponse) ProtoMessage() {}

func (x *GetTagsByEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsByEventIdResponse.ProtoReflect.Descriptor instead.
func (*GetTagsByEventIdResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTagsByEventIdResponse) GetTags() []*common.Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetApprovedUserByEventIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*common.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetApprovedUserByEventIdResponse) Reset() {
	*x = GetApprovedUserByEventIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApprovedUserByEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovedUserByEventIdResponse) ProtoMessage() {}

func (x *GetApprovedUserByEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovedUserByEventIdResponse.ProtoReflect.Descriptor instead.
func (*GetApprovedUserByEventIdResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetApprovedUserByEventIdResponse) GetUsers() []*common.User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetRatingByEventIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []int64 `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
}

func (x *GetRatingByEventIdResponse) Reset() {
	*x = GetRatingByEventIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatingByEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingByEventIdResponse) ProtoMessage() {}

func (x *GetRatingByEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingByEventIdResponse.ProtoReflect.Descriptor instead.
func (*GetRatingByEventIdResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetRatingByEventIdResponse) GetResult() []int64 {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetEventDurationByEventIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDurations []*common.EventDuration `protobuf:"bytes,1,rep,name=event_durations,json=eventDurations,proto3" json:"event_durations,omitempty"`
}

func (x *GetEventDurationByEventIdResponse) Reset() {
	*x = GetEventDurationByEventIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventDurationByEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventDurationByEventIdResponse) ProtoMessage() {}

func (x *GetEventDurationByEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventDurationByEventIdResponse.ProtoReflect.Descriptor instead.
func (*GetEventDurationByEventIdResponse) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetEventDurationByEventIdResponse) GetEventDurations() []*common.EventDuration {
	if x != nil {
		return x.EventDurations
	}
	return nil
}

type SubmitAnswerForPostEventQuestionRequest_Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SubmitAnswerForPostEventQuestionRequest_Answer) Reset() {
	*x = SubmitAnswerForPostEventQuestionRequest_Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_participant_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAnswerForPostEventQuestionRequest_Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswerForPostEventQuestionRequest_Answer) ProtoMessage() {}

func (x *SubmitAnswerForPostEventQuestionRequest_Answer) ProtoReflect() protoreflect.Message {
	mi := &file_hts_participant_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswerForPostEventQuestionRequest_Answer.ProtoReflect.Descriptor instead.
func (*SubmitAnswerForPostEventQuestionRequest_Answer) Descriptor() ([]byte, []int) {
	return file_hts_participant_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SubmitAnswerForPostEventQuestionRequest_Answer) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *SubmitAnswerForPostEventQuestionRequest_Answer) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_hts_participant_service_proto protoreflect.FileDescriptor

var file_hts_participant_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x68, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x1a, 0x17, 0x68, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x4a, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xe9, 0x01, 0x0a, 0x27, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x07, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68,
	0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x3f, 0x0a, 0x06, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x28, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x51, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x39, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x17, 0x49, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x6b, 0x0a, 0x11,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x4a, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x67, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x74, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xaa, 0x0e, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x10,
	0x49, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x28, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x2e, 0x49, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x68, 0x74, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x20, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x68, 0x74, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x68, 0x74, 0x73,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x1f, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x74,
	0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x68, 0x74,
	0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x52, 0x12, 0x22, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x51, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x4c, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x42, 0x10, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x6f, 0x6e, 0x65, 0x70,
	0x61, 0x73, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2f, 0x68, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hts_participant_service_proto_rawDescOnce sync.Once
	file_hts_participant_service_proto_rawDescData = file_hts_participant_service_proto_rawDesc
)

func file_hts_participant_service_proto_rawDescGZIP() []byte {
	file_hts_participant_service_proto_rawDescOnce.Do(func() {
		file_hts_participant_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_hts_participant_service_proto_rawDescData)
	})
	return file_hts_participant_service_proto_rawDescData
}

var file_hts_participant_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_hts_participant_service_proto_goTypes = []interface{}{
	(*GetEventByIdRequest)(nil),                            // 0: hts.participant.GetEventByIdRequest
	(*StringInputRequest)(nil),                             // 1: hts.participant.StringInputRequest
	(*UserWithEventRequest)(nil),                           // 2: hts.participant.UserWithEventRequest
	(*SubmitAnswerForPostEventQuestionRequest)(nil),        // 3: hts.participant.SubmitAnswerForPostEventQuestionRequest
	(*SubmitAnswerForPostEventQuestionResponse)(nil),       // 4: hts.participant.SubmitAnswerForPostEventQuestionResponse
	(*GenerateQRResponse)(nil),                             // 5: hts.participant.GenerateQRResponse
	(*EventsResponse)(nil),                                 // 6: hts.participant.EventsResponse
	(*IsEventAvailableRequest)(nil),                        // 7: hts.participant.IsEventAvailableRequest
	(*GetUpcomingEventsRequest)(nil),                       // 8: hts.participant.GetUpcomingEventsRequest
	(*GenerateQRRequest)(nil),                              // 9: hts.participant.GenerateQRRequest
	(*GetTagsByEventIdResponse)(nil),                       // 10: hts.participant.GetTagsByEventIdResponse
	(*GetApprovedUserByEventIdResponse)(nil),               // 11: hts.participant.GetApprovedUserByEventIdResponse
	(*GetRatingByEventIdResponse)(nil),                     // 12: hts.participant.GetRatingByEventIdResponse
	(*GetEventDurationByEventIdResponse)(nil),              // 13: hts.participant.GetEventDurationByEventIdResponse
	(*SubmitAnswerForPostEventQuestionRequest_Answer)(nil), // 14: hts.participant.SubmitAnswerForPostEventQuestionRequest.Answer
	(*common.Answer)(nil),                                  // 15: hts.common.Answer
	(*common.Event)(nil),                                   // 16: hts.common.Event
	(*timestamppb.Timestamp)(nil),                          // 17: google.protobuf.Timestamp
	(*common.Tag)(nil),                                     // 18: hts.common.Tag
	(*common.User)(nil),                                    // 19: hts.common.User
	(*common.EventDuration)(nil),                           // 20: hts.common.EventDuration
	(*emptypb.Empty)(nil),                                  // 21: google.protobuf.Empty
	(*common.GetObjectByIdRequest)(nil),                    // 22: hts.common.GetObjectByIdRequest
	(*wrapperspb.BoolValue)(nil),                           // 23: google.protobuf.BoolValue
	(*common.UserEvent)(nil),                               // 24: hts.common.UserEvent
	(*common.Location)(nil),                                // 25: hts.common.Location
}
var file_hts_participant_service_proto_depIdxs = []int32{
	14, // 0: hts.participant.SubmitAnswerForPostEventQuestionRequest.answers:type_name -> hts.participant.SubmitAnswerForPostEventQuestionRequest.Answer
	15, // 1: hts.participant.SubmitAnswerForPostEventQuestionResponse.answers:type_name -> hts.common.Answer
	16, // 2: hts.participant.EventsResponse.event:type_name -> hts.common.Event
	17, // 3: hts.participant.IsEventAvailableRequest.date:type_name -> google.protobuf.Timestamp
	17, // 4: hts.participant.GetUpcomingEventsRequest.start:type_name -> google.protobuf.Timestamp
	17, // 5: hts.participant.GetUpcomingEventsRequest.end:type_name -> google.protobuf.Timestamp
	18, // 6: hts.participant.GetTagsByEventIdResponse.tags:type_name -> hts.common.Tag
	19, // 7: hts.participant.GetApprovedUserByEventIdResponse.users:type_name -> hts.common.User
	20, // 8: hts.participant.GetEventDurationByEventIdResponse.event_durations:type_name -> hts.common.EventDuration
	7,  // 9: hts.participant.ParticipantService.IsEventAvailable:input_type -> hts.participant.IsEventAvailableRequest
	2,  // 10: hts.participant.ParticipantService.JoinEvent:input_type -> hts.participant.UserWithEventRequest
	2,  // 11: hts.participant.ParticipantService.CancelEvent:input_type -> hts.participant.UserWithEventRequest
	3,  // 12: hts.participant.ParticipantService.SubmitAnswerForPostEventQuestion:input_type -> hts.participant.SubmitAnswerForPostEventQuestionRequest
	0,  // 13: hts.participant.ParticipantService.GetEventById:input_type -> hts.participant.GetEventByIdRequest
	21, // 14: hts.participant.ParticipantService.GetAllEvents:input_type -> google.protobuf.Empty
	21, // 15: hts.participant.ParticipantService.GetSuggestedEvents:input_type -> google.protobuf.Empty
	8,  // 16: hts.participant.ParticipantService.GetUpcomingEvents:input_type -> hts.participant.GetUpcomingEventsRequest
	1,  // 17: hts.participant.ParticipantService.GetEventsByStringOfName:input_type -> hts.participant.StringInputRequest
	22, // 18: hts.participant.ParticipantService.GetEventsByTagId:input_type -> hts.common.GetObjectByIdRequest
	22, // 19: hts.participant.ParticipantService.GetEventsByOrganizationId:input_type -> hts.common.GetObjectByIdRequest
	22, // 20: hts.participant.ParticipantService.GetEventsByFacilityId:input_type -> hts.common.GetObjectByIdRequest
	17, // 21: hts.participant.ParticipantService.GetEventsByDate:input_type -> google.protobuf.Timestamp
	22, // 22: hts.participant.ParticipantService.GetLocationById:input_type -> hts.common.GetObjectByIdRequest
	22, // 23: hts.participant.ParticipantService.GetTagsByEventId:input_type -> hts.common.GetObjectByIdRequest
	22, // 24: hts.participant.ParticipantService.GetRatingByEventId:input_type -> hts.common.GetObjectByIdRequest
	22, // 25: hts.participant.ParticipantService.GetApprovedUserByEventId:input_type -> hts.common.GetObjectByIdRequest
	22, // 26: hts.participant.ParticipantService.GetEventDurationByEventId:input_type -> hts.common.GetObjectByIdRequest
	9,  // 27: hts.participant.ParticipantService.GenerateQR:input_type -> hts.participant.GenerateQRRequest
	21, // 28: hts.participant.ParticipantService.Ping:input_type -> google.protobuf.Empty
	23, // 29: hts.participant.ParticipantService.IsEventAvailable:output_type -> google.protobuf.BoolValue
	24, // 30: hts.participant.ParticipantService.JoinEvent:output_type -> hts.common.UserEvent
	16, // 31: hts.participant.ParticipantService.CancelEvent:output_type -> hts.common.Event
	4,  // 32: hts.participant.ParticipantService.SubmitAnswerForPostEventQuestion:output_type -> hts.participant.SubmitAnswerForPostEventQuestionResponse
	16, // 33: hts.participant.ParticipantService.GetEventById:output_type -> hts.common.Event
	6,  // 34: hts.participant.ParticipantService.GetAllEvents:output_type -> hts.participant.EventsResponse
	6,  // 35: hts.participant.ParticipantService.GetSuggestedEvents:output_type -> hts.participant.EventsResponse
	6,  // 36: hts.participant.ParticipantService.GetUpcomingEvents:output_type -> hts.participant.EventsResponse
	6,  // 37: hts.participant.ParticipantService.GetEventsByStringOfName:output_type -> hts.participant.EventsResponse
	6,  // 38: hts.participant.ParticipantService.GetEventsByTagId:output_type -> hts.participant.EventsResponse
	6,  // 39: hts.participant.ParticipantService.GetEventsByOrganizationId:output_type -> hts.participant.EventsResponse
	6,  // 40: hts.participant.ParticipantService.GetEventsByFacilityId:output_type -> hts.participant.EventsResponse
	6,  // 41: hts.participant.ParticipantService.GetEventsByDate:output_type -> hts.participant.EventsResponse
	25, // 42: hts.participant.ParticipantService.GetLocationById:output_type -> hts.common.Location
	10, // 43: hts.participant.ParticipantService.GetTagsByEventId:output_type -> hts.participant.GetTagsByEventIdResponse
	12, // 44: hts.participant.ParticipantService.GetRatingByEventId:output_type -> hts.participant.GetRatingByEventIdResponse
	11, // 45: hts.participant.ParticipantService.GetApprovedUserByEventId:output_type -> hts.participant.GetApprovedUserByEventIdResponse
	13, // 46: hts.participant.ParticipantService.GetEventDurationByEventId:output_type -> hts.participant.GetEventDurationByEventIdResponse
	5,  // 47: hts.participant.ParticipantService.GenerateQR:output_type -> hts.participant.GenerateQRResponse
	23, // 48: hts.participant.ParticipantService.Ping:output_type -> google.protobuf.BoolValue
	29, // [29:49] is the sub-list for method output_type
	9,  // [9:29] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_hts_participant_service_proto_init() }
func file_hts_participant_service_proto_init() {
	if File_hts_participant_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hts_participant_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringInputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAnswerForPostEventQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAnswerForPostEventQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateQRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEventAvailableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpcomingEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateQRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagsByEventIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApprovedUserByEventIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatingByEventIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventDurationByEventIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_participant_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAnswerForPostEventQuestionRequest_Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hts_participant_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hts_participant_service_proto_goTypes,
		DependencyIndexes: file_hts_participant_service_proto_depIdxs,
		MessageInfos:      file_hts_participant_service_proto_msgTypes,
	}.Build()
	File_hts_participant_service_proto = out.File
	file_hts_participant_service_proto_rawDesc = nil
	file_hts_participant_service_proto_goTypes = nil
	file_hts_participant_service_proto_depIdxs = nil
}
