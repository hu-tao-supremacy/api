// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: hts/facility/service.proto

package facility

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "onepass.app/facility/hts/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId      int64                `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	FacilityId   int64                `protobuf:"varint,3,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	IsApproved   int64                `protobuf:"varint,4,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
	RejectReason int64                `protobuf:"varint,5,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	Start        *timestamp.Timestamp `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	Finish       *timestamp.Timestamp `protobuf:"bytes,7,opt,name=finish,proto3" json:"finish,omitempty"`
}

func (x *FacilityRequest) Reset() {
	*x = FacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityRequest) ProtoMessage() {}

func (x *FacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityRequest.ProtoReflect.Descriptor instead.
func (*FacilityRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{0}
}

func (x *FacilityRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacilityRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *FacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *FacilityRequest) GetIsApproved() int64 {
	if x != nil {
		return x.IsApproved
	}
	return 0
}

func (x *FacilityRequest) GetRejectReason() int64 {
	if x != nil {
		return x.RejectReason
	}
	return 0
}

func (x *FacilityRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *FacilityRequest) GetFinish() *timestamp.Timestamp {
	if x != nil {
		return x.Finish
	}
	return nil
}

type Facility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId int64  `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Latitude       int64  `protobuf:"varint,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude      int64  `protobuf:"varint,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	OperatingHours string `protobuf:"bytes,6,opt,name=operating_hours,json=operatingHours,proto3" json:"operating_hours,omitempty"`
	Description    string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Facility) Reset() {
	*x = Facility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Facility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facility) ProtoMessage() {}

func (x *Facility) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facility.ProtoReflect.Descriptor instead.
func (*Facility) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{1}
}

func (x *Facility) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Facility) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *Facility) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Facility) GetLatitude() int64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Facility) GetLongitude() int64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Facility) GetOperatingHours() string {
	if x != nil {
		return x.OperatingHours
	}
	return ""
}

func (x *Facility) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type FacilityRequestWithFacilityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId        int64                `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	FacilityId     int64                `protobuf:"varint,3,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	OrganizationId int64                `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	IsApproved     int64                `protobuf:"varint,5,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
	RejectReason   int64                `protobuf:"varint,6,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	Start          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start,proto3" json:"start,omitempty"`
	Finish         *timestamp.Timestamp `protobuf:"bytes,8,opt,name=finish,proto3" json:"finish,omitempty"`
	FacilityName   string               `protobuf:"bytes,9,opt,name=facility_name,json=facilityName,proto3" json:"facility_name,omitempty"`
	Latitude       int64                `protobuf:"varint,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude      int64                `protobuf:"varint,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
	OperatingHours string               `protobuf:"bytes,12,opt,name=operating_hours,json=operatingHours,proto3" json:"operating_hours,omitempty"`
	Description    string               `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *FacilityRequestWithFacilityInfo) Reset() {
	*x = FacilityRequestWithFacilityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityRequestWithFacilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityRequestWithFacilityInfo) ProtoMessage() {}

func (x *FacilityRequestWithFacilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityRequestWithFacilityInfo.ProtoReflect.Descriptor instead.
func (*FacilityRequestWithFacilityInfo) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{2}
}

func (x *FacilityRequestWithFacilityInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetIsApproved() int64 {
	if x != nil {
		return x.IsApproved
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetRejectReason() int64 {
	if x != nil {
		return x.RejectReason
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *FacilityRequestWithFacilityInfo) GetFinish() *timestamp.Timestamp {
	if x != nil {
		return x.Finish
	}
	return nil
}

func (x *FacilityRequestWithFacilityInfo) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *FacilityRequestWithFacilityInfo) GetLatitude() int64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetLongitude() int64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *FacilityRequestWithFacilityInfo) GetOperatingHours() string {
	if x != nil {
		return x.OperatingHours
	}
	return ""
}

func (x *FacilityRequestWithFacilityInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetFacilityListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetFacilityListRequest) Reset() {
	*x = GetFacilityListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityListRequest) ProtoMessage() {}

func (x *GetFacilityListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityListRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityListRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetFacilityListRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type GetFacilityListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facilities []*Facility `protobuf:"bytes,1,rep,name=facilities,proto3" json:"facilities,omitempty"`
}

func (x *GetFacilityListResponse) Reset() {
	*x = GetFacilityListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityListResponse) ProtoMessage() {}

func (x *GetFacilityListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityListResponse.ProtoReflect.Descriptor instead.
func (*GetFacilityListResponse) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetFacilityListResponse) GetFacilities() []*Facility {
	if x != nil {
		return x.Facilities
	}
	return nil
}

type GetFacilityRequestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetFacilityRequestListRequest) Reset() {
	*x = GetFacilityRequestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityRequestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequestListRequest) ProtoMessage() {}

func (x *GetFacilityRequestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityRequestListRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityRequestListRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetFacilityRequestListRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type GetFacilityRequestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*FacilityRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetFacilityRequestListResponse) Reset() {
	*x = GetFacilityRequestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityRequestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequestListResponse) ProtoMessage() {}

func (x *GetFacilityRequestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityRequestListResponse.ProtoReflect.Descriptor instead.
func (*GetFacilityRequestListResponse) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetFacilityRequestListResponse) GetRequests() []*FacilityRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type GetFacilityRequestsStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *GetFacilityRequestsStatusRequest) Reset() {
	*x = GetFacilityRequestsStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityRequestsStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequestsStatusRequest) ProtoMessage() {}

func (x *GetFacilityRequestsStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityRequestsStatusRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityRequestsStatusRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetFacilityRequestsStatusRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type GetFacilityRequestsStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*FacilityRequestWithFacilityInfo `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetFacilityRequestsStatusResponse) Reset() {
	*x = GetFacilityRequestsStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityRequestsStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityRequestsStatusResponse) ProtoMessage() {}

func (x *GetFacilityRequestsStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityRequestsStatusResponse.ProtoReflect.Descriptor instead.
func (*GetFacilityRequestsStatusResponse) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetFacilityRequestsStatusResponse) GetRequests() []*FacilityRequestWithFacilityInfo {
	if x != nil {
		return x.Requests
	}
	return nil
}

type GetAvailableFacilityListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facilities []*Facility `protobuf:"bytes,1,rep,name=facilities,proto3" json:"facilities,omitempty"`
}

func (x *GetAvailableFacilityListResponse) Reset() {
	*x = GetAvailableFacilityListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableFacilityListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableFacilityListResponse) ProtoMessage() {}

func (x *GetAvailableFacilityListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableFacilityListResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableFacilityListResponse) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAvailableFacilityListResponse) GetFacilities() []*Facility {
	if x != nil {
		return x.Facilities
	}
	return nil
}

type GetAvailableTimeOfFacilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FacilityId int64                `protobuf:"varint,1,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	Start      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetAvailableTimeOfFacilityRequest) Reset() {
	*x = GetAvailableTimeOfFacilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimeOfFacilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimeOfFacilityRequest) ProtoMessage() {}

func (x *GetAvailableTimeOfFacilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimeOfFacilityRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableTimeOfFacilityRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvailableTimeOfFacilityRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *GetAvailableTimeOfFacilityRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetAvailableTimeOfFacilityRequest) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type GetAvailableTimeOfFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day []*GetAvailableTimeOfFacilityResponse_Day `protobuf:"bytes,1,rep,name=day,proto3" json:"day,omitempty"`
}

func (x *GetAvailableTimeOfFacilityResponse) Reset() {
	*x = GetAvailableTimeOfFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimeOfFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimeOfFacilityResponse) ProtoMessage() {}

func (x *GetAvailableTimeOfFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimeOfFacilityResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableTimeOfFacilityResponse) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetAvailableTimeOfFacilityResponse) GetDay() []*GetAvailableTimeOfFacilityResponse_Day {
	if x != nil {
		return x.Day
	}
	return nil
}

type RequestFacilityRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId    int64                `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	FacilityId int64                `protobuf:"varint,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	Start      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RequestFacilityRequestRequest) Reset() {
	*x = RequestFacilityRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFacilityRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFacilityRequestRequest) ProtoMessage() {}

func (x *RequestFacilityRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFacilityRequestRequest.ProtoReflect.Descriptor instead.
func (*RequestFacilityRequestRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{12}
}

func (x *RequestFacilityRequestRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *RequestFacilityRequestRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

func (x *RequestFacilityRequestRequest) GetStart() *timestamp.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *RequestFacilityRequestRequest) GetEnd() *timestamp.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type ApproveFacilityRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ApproveFacilityRequestRequest) Reset() {
	*x = ApproveFacilityRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveFacilityRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveFacilityRequestRequest) ProtoMessage() {}

func (x *ApproveFacilityRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveFacilityRequestRequest.ProtoReflect.Descriptor instead.
func (*ApproveFacilityRequestRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveFacilityRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type RejectFacilityRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RejectFacilityRequestRequest) Reset() {
	*x = RejectFacilityRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectFacilityRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectFacilityRequestRequest) ProtoMessage() {}

func (x *RejectFacilityRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectFacilityRequestRequest.ProtoReflect.Descriptor instead.
func (*RejectFacilityRequestRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{14}
}

func (x *RejectFacilityRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *RejectFacilityRequestRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GetFacilityInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FacilityId int64 `protobuf:"varint,1,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
}

func (x *GetFacilityInfoRequest) Reset() {
	*x = GetFacilityInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFacilityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFacilityInfoRequest) ProtoMessage() {}

func (x *GetFacilityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFacilityInfoRequest.ProtoReflect.Descriptor instead.
func (*GetFacilityInfoRequest) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetFacilityInfoRequest) GetFacilityId() int64 {
	if x != nil {
		return x.FacilityId
	}
	return 0
}

type GetAvailableTimeOfFacilityResponse_Day struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []bool `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *GetAvailableTimeOfFacilityResponse_Day) Reset() {
	*x = GetAvailableTimeOfFacilityResponse_Day{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hts_facility_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimeOfFacilityResponse_Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimeOfFacilityResponse_Day) ProtoMessage() {}

func (x *GetAvailableTimeOfFacilityResponse_Day) ProtoReflect() protoreflect.Message {
	mi := &file_hts_facility_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimeOfFacilityResponse_Day.ProtoReflect.Descriptor instead.
func (*GetAvailableTimeOfFacilityResponse_Day) Descriptor() ([]byte, []int) {
	return file_hts_facility_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetAvailableTimeOfFacilityResponse_Day) GetItems() []bool {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_hts_facility_service_proto protoreflect.FileDescriptor

var file_hts_facility_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x68, 0x74, 0x73, 0x2f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x68, 0x74,
	0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x17, 0x68, 0x74, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x22, 0xdc, 0x01,
	0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x03, 0x0a,
	0x1f, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x48, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f,
	0x66, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x79, 0x52, 0x03, 0x64, 0x61, 0x79, 0x1a, 0x1f, 0x0a, 0x03, 0x44, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x1d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x3e, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1c, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x39, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x32, 0xb4, 0x07, 0x0a, 0x0f, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x24, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x2f, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x66, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x16,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x57, 0x0a, 0x15, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68,
	0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x68, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x74, 0x73, 0x2e,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x42, 0x46, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x42, 0x0d, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x2f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x68, 0x74, 0x73,
	0x2f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_hts_facility_service_proto_rawDescOnce sync.Once
	file_hts_facility_service_proto_rawDescData = file_hts_facility_service_proto_rawDesc
)

func file_hts_facility_service_proto_rawDescGZIP() []byte {
	file_hts_facility_service_proto_rawDescOnce.Do(func() {
		file_hts_facility_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_hts_facility_service_proto_rawDescData)
	})
	return file_hts_facility_service_proto_rawDescData
}

var file_hts_facility_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_hts_facility_service_proto_goTypes = []interface{}{
	(*FacilityRequest)(nil),                        // 0: hts.facility.FacilityRequest
	(*Facility)(nil),                               // 1: hts.facility.Facility
	(*FacilityRequestWithFacilityInfo)(nil),        // 2: hts.facility.FacilityRequestWithFacilityInfo
	(*GetFacilityListRequest)(nil),                 // 3: hts.facility.GetFacilityListRequest
	(*GetFacilityListResponse)(nil),                // 4: hts.facility.GetFacilityListResponse
	(*GetFacilityRequestListRequest)(nil),          // 5: hts.facility.GetFacilityRequestListRequest
	(*GetFacilityRequestListResponse)(nil),         // 6: hts.facility.GetFacilityRequestListResponse
	(*GetFacilityRequestsStatusRequest)(nil),       // 7: hts.facility.GetFacilityRequestsStatusRequest
	(*GetFacilityRequestsStatusResponse)(nil),      // 8: hts.facility.GetFacilityRequestsStatusResponse
	(*GetAvailableFacilityListResponse)(nil),       // 9: hts.facility.GetAvailableFacilityListResponse
	(*GetAvailableTimeOfFacilityRequest)(nil),      // 10: hts.facility.GetAvailableTimeOfFacilityRequest
	(*GetAvailableTimeOfFacilityResponse)(nil),     // 11: hts.facility.GetAvailableTimeOfFacilityResponse
	(*RequestFacilityRequestRequest)(nil),          // 12: hts.facility.RequestFacilityRequestRequest
	(*ApproveFacilityRequestRequest)(nil),          // 13: hts.facility.ApproveFacilityRequestRequest
	(*RejectFacilityRequestRequest)(nil),           // 14: hts.facility.RejectFacilityRequestRequest
	(*GetFacilityInfoRequest)(nil),                 // 15: hts.facility.GetFacilityInfoRequest
	(*GetAvailableTimeOfFacilityResponse_Day)(nil), // 16: hts.facility.GetAvailableTimeOfFacilityResponse.Day
	(*timestamp.Timestamp)(nil),                    // 17: google.protobuf.Timestamp
	(*empty.Empty)(nil),                            // 18: google.protobuf.Empty
	(*common.Result)(nil),                          // 19: hts.common.Result
}
var file_hts_facility_service_proto_depIdxs = []int32{
	17, // 0: hts.facility.FacilityRequest.start:type_name -> google.protobuf.Timestamp
	17, // 1: hts.facility.FacilityRequest.finish:type_name -> google.protobuf.Timestamp
	17, // 2: hts.facility.FacilityRequestWithFacilityInfo.start:type_name -> google.protobuf.Timestamp
	17, // 3: hts.facility.FacilityRequestWithFacilityInfo.finish:type_name -> google.protobuf.Timestamp
	1,  // 4: hts.facility.GetFacilityListResponse.facilities:type_name -> hts.facility.Facility
	0,  // 5: hts.facility.GetFacilityRequestListResponse.requests:type_name -> hts.facility.FacilityRequest
	2,  // 6: hts.facility.GetFacilityRequestsStatusResponse.requests:type_name -> hts.facility.FacilityRequestWithFacilityInfo
	1,  // 7: hts.facility.GetAvailableFacilityListResponse.facilities:type_name -> hts.facility.Facility
	17, // 8: hts.facility.GetAvailableTimeOfFacilityRequest.start:type_name -> google.protobuf.Timestamp
	17, // 9: hts.facility.GetAvailableTimeOfFacilityRequest.end:type_name -> google.protobuf.Timestamp
	16, // 10: hts.facility.GetAvailableTimeOfFacilityResponse.day:type_name -> hts.facility.GetAvailableTimeOfFacilityResponse.Day
	17, // 11: hts.facility.RequestFacilityRequestRequest.start:type_name -> google.protobuf.Timestamp
	17, // 12: hts.facility.RequestFacilityRequestRequest.end:type_name -> google.protobuf.Timestamp
	3,  // 13: hts.facility.FacilityService.GetFacilityList:input_type -> hts.facility.GetFacilityListRequest
	5,  // 14: hts.facility.FacilityService.GetFacilityRequestList:input_type -> hts.facility.GetFacilityRequestListRequest
	7,  // 15: hts.facility.FacilityService.GetFacilityRequestsStatus:input_type -> hts.facility.GetFacilityRequestsStatusRequest
	18, // 16: hts.facility.FacilityService.GetAvailableFacilityList:input_type -> google.protobuf.Empty
	10, // 17: hts.facility.FacilityService.GetAvailableTimeOfFacility:input_type -> hts.facility.GetAvailableTimeOfFacilityRequest
	12, // 18: hts.facility.FacilityService.RequestFacilityRequest:input_type -> hts.facility.RequestFacilityRequestRequest
	13, // 19: hts.facility.FacilityService.ApproveFacilityRequest:input_type -> hts.facility.ApproveFacilityRequestRequest
	14, // 20: hts.facility.FacilityService.RejectFacilityRequest:input_type -> hts.facility.RejectFacilityRequestRequest
	15, // 21: hts.facility.FacilityService.GetFacilityInfo:input_type -> hts.facility.GetFacilityInfoRequest
	4,  // 22: hts.facility.FacilityService.GetFacilityList:output_type -> hts.facility.GetFacilityListResponse
	6,  // 23: hts.facility.FacilityService.GetFacilityRequestList:output_type -> hts.facility.GetFacilityRequestListResponse
	8,  // 24: hts.facility.FacilityService.GetFacilityRequestsStatus:output_type -> hts.facility.GetFacilityRequestsStatusResponse
	9,  // 25: hts.facility.FacilityService.GetAvailableFacilityList:output_type -> hts.facility.GetAvailableFacilityListResponse
	11, // 26: hts.facility.FacilityService.GetAvailableTimeOfFacility:output_type -> hts.facility.GetAvailableTimeOfFacilityResponse
	0,  // 27: hts.facility.FacilityService.RequestFacilityRequest:output_type -> hts.facility.FacilityRequest
	19, // 28: hts.facility.FacilityService.ApproveFacilityRequest:output_type -> hts.common.Result
	19, // 29: hts.facility.FacilityService.RejectFacilityRequest:output_type -> hts.common.Result
	1,  // 30: hts.facility.FacilityService.GetFacilityInfo:output_type -> hts.facility.Facility
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_hts_facility_service_proto_init() }
func file_hts_facility_service_proto_init() {
	if File_hts_facility_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hts_facility_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Facility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityRequestWithFacilityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityRequestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityRequestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityRequestsStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityRequestsStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableFacilityListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimeOfFacilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimeOfFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestFacilityRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveFacilityRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectFacilityRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFacilityInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hts_facility_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimeOfFacilityResponse_Day); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hts_facility_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hts_facility_service_proto_goTypes,
		DependencyIndexes: file_hts_facility_service_proto_depIdxs,
		MessageInfos:      file_hts_facility_service_proto_msgTypes,
	}.Build()
	File_hts_facility_service_proto = out.File
	file_hts_facility_service_proto_rawDesc = nil
	file_hts_facility_service_proto_goTypes = nil
	file_hts_facility_service_proto_depIdxs = nil
}
