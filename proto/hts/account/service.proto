syntax = "proto3";

package hts.account;

option java_multiple_files = true;
option java_package = "app.onepass.apis";
option java_outer_classname = "AccountProto";
option go_package = "onepass.app/facility/hts/account";

import "hts/common/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

enum Role {
  ROLE_UNSPECIFIED = 0;
  // Full access to all resources.
  ORGANIZATION_OWNER = 1;
  // Edit access to all resources.
  ORGANIZATION_EDITOR = 2;
  // Full management of events in organization.
  ORGANIZATION_MEMBER = 3;
}

message AccessTokenPayload {
  int32 user_id = 1;
}

message IsAuthenticatedRequest {
  string access_token = 1;
}

message GenerateAccessTokenRequest {
  int32 user_id = 1;
}

message GenerateAccessTokenResponse {
  string access_token = 1;
}

message HasPermissionRequest {
  int32 user_id = 1;
  int32 organization_id = 2;
  hts.common.Permission permission_name = 3;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  string chula_id = 3;
  string email = 4;
  bool is_chula_student = 5;
}

message GetUserByChulaIdRequest {
  string id = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message AssignRoleRequest {
  int32 user_id = 1;
  int32 organization_id = 2;
  Role role = 3;
}

message RemoveRoleRequest {
  int32 user_id = 1;
  int32 organization_id = 2;
  Role role = 3;
}

message UpdateUserInterestsRequest {
  int32 user_id = 1;
  repeated int32 tag_ids = 2;
}

message GetOrganizationsByUserIdResponse {
  repeated hts.common.Organization organizations = 1;
}

service AccountService {
  rpc CreateUser(CreateUserRequest) returns (hts.common.User);
  rpc GetUserByChulaId(GetUserByChulaIdRequest) returns (hts.common.User);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (hts.common.User);
  rpc IsAuthenticated(IsAuthenticatedRequest) returns (google.protobuf.BoolValue);
  rpc UpdateAccountInfo(hts.common.User) returns (hts.common.User);
  rpc UpdateUserInterests(UpdateUserInterestsRequest) returns (hts.common.User);
  rpc GetUserById(hts.common.GetObjectByIdRequest) returns (hts.common.User);
  rpc GenerateAccessToken(GenerateAccessTokenRequest) returns (GenerateAccessTokenResponse);
  rpc HasPermission(HasPermissionRequest) returns (google.protobuf.BoolValue);
  rpc AssignRole(AssignRoleRequest) returns (google.protobuf.BoolValue);
  rpc RemoveRole(RemoveRoleRequest) returns (google.protobuf.BoolValue);
  rpc GetOrganizationsByUserId(hts.common.GetObjectByIdRequest) returns (GetOrganizationsByUserIdResponse);
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.BoolValue);
}
