syntax = "proto3";

package hts.organizer;

option java_multiple_files = true;
option java_package = "app.onepass.apis";
option java_outer_classname = "OrganizerProto";
option go_package = "onepass.app/facility/hts/organizer";

import "hts/common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

message Duration {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp finish = 2;
}

message CreateOrganizationRequest {
  int32 user_id = 1;
  hts.common.Organization organization = 2;
}

message UpdateOrganizationRequest {
  int32 user_id = 1;
  hts.common.Organization organization = 2;
}

message RemoveOrganizationRequest {
  int32 user_id = 1;
  int32 organization_id = 2;
}

message UpdateUsersInOrganizationRequest {
  int32 user_id = 1;
  repeated int32 user_ids = 2 [packed=true];
  int32 organization_id = 3;
}

message CreateEventRequest {
  int32 user_id = 1;
  hts.common.Event event = 2;
}

message UpdateEventRequest {
  int32 user_id = 1;
  hts.common.Event event = 2;
}

message UpdateEventDurationRequest {
  int32 user_id = 1;
  int32 event_id = 2;
  repeated Duration duration = 3;
}

message RemoveEventRequest {
  int32 user_id = 1;
  int32 event_id = 2;
}

message UpdateRegistrationRequestRequest {
  int32 user_id = 1;
  int32 registered_user_id = 2;
  int32 registered_event_id = 3;
  hts.common.UserEvent.Status status = 4;
}

message CreateTagRequest {
  int32 user_id = 1;
  int32 organization_id = 2;
  hts.common.Tag tag = 3;
}

message UpdateTagRequest {
  int32 user_id = 1;
  repeated int32 tag_ids = 2 [packed=true];
  int32 event_id = 3;
}

message HasEventRequest {
  int32 organization_id = 1;
  int32 event_id = 2;
}

message AddQuestionGroupsRequest {
  int32 user_id = 1;
  repeated hts.common.QuestionGroup question_groups = 2;
}

message RemoveQuestionGroupsRequest {
  int32 user_id = 1;
  repeated int32 question_group_ids = 2;
}

message AddQuestionsRequest {
  int32 user_id = 1;
  repeated hts.common.Question questions = 2;
}

message RemoveQuestionsRequest {
  int32 user_id = 1;
  repeated int32 question_ids = 2;
}

message CreateLocationRequest {
  int32 user_id = 1;
  hts.common.Location location = 2;
}

message UpdateLocationRequest {
  int32 user_id = 1;
  hts.common.Location location = 2;
}

message RemoveLocationRequest {
  int32 user_id = 1;
  int32 location_id = 2;
}

message GenerateTicketRequest {
  int32 user_id = 1;
  int32 event_id = 2;
}

message OrganizationListResponse {
  repeated hts.common.Organization organizations = 1;
}

message UserListResponse {
  repeated hts.common.User users = 1;
}

message UserOrganizationListResponse {
  repeated hts.common.UserOrganization user_organizations = 1;
}

message EventDurationListResponse {
  repeated hts.common.EventDuration event_durations = 1;
}

message EventTagListResponse {
  repeated hts.common.EventTag event_tags = 1;
}

message QuestionGroupListResponse {
  repeated hts.common.QuestionGroup question_groups = 1;
}

message QuestionListResponse {
  repeated hts.common.Question questions = 1;
}

message AnswerListResponse {
  repeated hts.common.Answer answers = 1;
}

message LocationListResponse {
  repeated hts.common.Location locations = 1;
}

message CheckInRequest {
  int32 user_id = 1;
  int32 event_id = 2;
}

service OrganizerService {
  rpc CreateOrganization(CreateOrganizationRequest) returns (hts.common.Organization);
  rpc GetOrganizations(google.protobuf.Empty) returns (OrganizationListResponse);
  rpc GetOrganizationById(hts.common.GetObjectByIdRequest) returns (hts.common.Organization);
  rpc GetUsersInOrganizationById(hts.common.GetObjectByIdRequest) returns (UserListResponse);
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (hts.common.Organization);
  rpc RemoveOrganization(RemoveOrganizationRequest) returns (hts.common.Organization);
  rpc AddUsersToOrganization(UpdateUsersInOrganizationRequest) returns (UserOrganizationListResponse);
  rpc RemoveUsersFromOrganization(UpdateUsersInOrganizationRequest) returns (UserOrganizationListResponse);
  rpc CreateEvent(CreateEventRequest) returns (hts.common.Event);
  rpc UpdateEvent(UpdateEventRequest) returns (hts.common.Event);
  rpc UpdateEventDurations(UpdateEventDurationRequest) returns (EventDurationListResponse);
  rpc RemoveEvent(RemoveEventRequest) returns (hts.common.Event);
  rpc UpdateRegistrationRequest(UpdateRegistrationRequestRequest) returns (hts.common.UserEvent);
  rpc CreateTag(CreateTagRequest) returns (hts.common.Tag);
  rpc AddTags(UpdateTagRequest) returns (EventTagListResponse);
  rpc RemoveTags(UpdateTagRequest) returns (EventTagListResponse);
  rpc HasEvent(HasEventRequest) returns (hts.common.Event);
  rpc AddQuestionGroups(AddQuestionGroupsRequest) returns (QuestionGroupListResponse);
  rpc RemoveQuestionGroups(RemoveQuestionGroupsRequest) returns (QuestionGroupListResponse);
  rpc AddQuestions(AddQuestionsRequest) returns (QuestionListResponse);
  rpc RemoveQuestions(RemoveQuestionsRequest) returns (QuestionListResponse);
  rpc GetAnswersByQuestionId(hts.common.GetObjectByIdRequest) returns (AnswerListResponse);
  rpc CreateLocation(CreateLocationRequest) returns (hts.common.Location);
  rpc GetLocations(google.protobuf.Empty) returns (LocationListResponse);
  rpc GetLocationById(hts.common.GetObjectByIdRequest) returns (hts.common.Location);
  rpc SearchLocationsByName(hts.common.GetObjectByNameRequest) returns (LocationListResponse);
  rpc UpdateLocation(UpdateLocationRequest) returns (hts.common.Location);
  rpc RemoveLocation(RemoveLocationRequest) returns (hts.common.Location);
  rpc GenerateTicket(GenerateTicketRequest) returns (hts.common.UserEvent);
  rpc CheckIn(CheckInRequest) returns (hts.common.UserEvent);
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.BoolValue);
}
